using UnityEngine;
using System.Linq;
using System.Collections.Generic;

public class SkillShopManager : MonoBehaviour
{
    [Header("Skills Pool")]
    public List<SkillData> allShopSkills; // –£—Å—ñ –º–æ–∂–ª–∏–≤—ñ —Å–∫—ñ–ª–∏ –º–∞–≥–∞–∑–∏–Ω—É

    [Header("Player Panel")]
    public Transform playerSkillPanel; // –ø–∞–Ω–µ–ª—å –≤–Ω–∏–∑—É
    public GameObject skillUIPrefab;   // –ø—Ä–µ—Ñ–∞–± –æ–¥–Ω—ñ—î—ó –∫–Ω–æ–ø–∫–∏/—ñ–∫–æ–Ω–∫–∏ —Å–∫—ñ–ª–∞

    private int currentBet = 0;

    void Start()
    {
        // –ü–æ–∫–∞–∑—É—î–º–æ –≤–∂–µ –∫—É–ø–ª–µ–Ω—ñ —Å–∫—ñ–ª–∏
        foreach (SkillData skill in PlayerData.Instance.ownedSkills)
        {
            AddSkillToPanel(skill);
        }
    }

    public void GiveSkillByBet(int coins)
    {
        if (coins <= 0)
        {
            Debug.Log("‚ùå –ù–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∂–æ–¥–Ω–æ—ó –º–æ–Ω–µ—Ç–∏");
            return;
        }

        currentBet = coins;
        ConfirmBet();
    }


    private void ConfirmBet()
{
    // üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∑–∞–≥–∞–ª—ñ —î –¥–æ—Å—Ç—É–ø–Ω—ñ —Å–∫—ñ–ª–∏
    var remainingSkills = allShopSkills
        .Where(s => !PlayerData.Instance.ownedSkills.Contains(s))
        .ToList();

    if (remainingSkills.Count == 0)
    {
        // –í–∑–∞–≥–∞–ª—ñ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–∞–ª–∏—à–∏–ª–æ—Å—å
        Debug.Log("‚ùå –í—Å—ñ —Å–∫—ñ–ª–∏ –≤–∂–µ –≤–∏–¥–∞–Ω—ñ");
        FindObjectOfType<DialogueManager>()
            .ShowMessage("I already helped you enough. You should be able to handle it by yourself.");
        return;
    }

    int targetRarity = GetRarityByBet(currentBet);

    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∑–∞ –ø–æ—Ç–æ—á–Ω–æ—é —Å—Ç–∞–≤–∫–æ—é
    var availableForBet = remainingSkills
        .Where(s => s.rarity == targetRarity)
        .ToList();

    if (availableForBet.Count == 0)
    {
        // –ù–µ–º–∞—î –ø—ñ–¥—Ö–æ–¥—è—â–∏—Ö –ø—ñ–¥ —Ü—é —Å—Ç–∞–≤–∫—É
        Debug.Log("‚ùå –ó–∞ —Ü—é —Å—Ç–∞–≤–∫—É —Å–∫—ñ–ª—ñ–≤ –±—ñ–ª—å—à–µ –Ω–µ–º–∞");
        FindObjectOfType<DialogueManager>()
            .ShowMessage("I need more money to help you. Go and get!");
        return;
    }

    // –û—Å–Ω–æ–≤–Ω–∏–π –≤–∏–±—ñ—Ä —Å–∫—ñ–ª–∞
    SkillData chosen = availableForBet[Random.Range(0, availableForBet.Count)];

    PlayerData.Instance.AddSkill(chosen);
    allShopSkills.Remove(chosen);
    AddSkillToPanel(chosen);

    Debug.Log($"‚úÖ –î–æ–¥–∞–Ω–æ —Å–∫—ñ–ª: {chosen.skillName}");

    currentBet = 0;
}

    private int GetRarityByBet(int bet)
    {
        if (bet >= 100) return 4;
        if (bet >= 50) return 3;  
        if (bet >= 30) return 2;   
        return 1;                  
    }

    private void AddSkillToPanel(SkillData skill)
    {
        GameObject skillGO = Instantiate(skillUIPrefab, playerSkillPanel);
        SkillUI ui = skillGO.GetComponent<SkillUI>();
        if (ui != null)
            ui.Setup(skill);
        else
            Debug.LogError("‚ùå –ù–∞ SkillUIPrefab –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç SkillUI!");
    }
}
